/*
Saviynt Enterprise Identity Cloud (EIC) API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package saviynt

import (
	"encoding/json"
)

// checks if the FetchControlListESRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FetchControlListESRequest{}

// FetchControlListESRequest struct for FetchControlListESRequest
type FetchControlListESRequest struct {
	Searchcriteria map[string]interface{} `json:"searchcriteria,omitempty"`
	Max *string `json:"max,omitempty"`
	Offset *string `json:"offset,omitempty"`
	Loggedinuser *string `json:"loggedinuser,omitempty"`
}

// NewFetchControlListESRequest instantiates a new FetchControlListESRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFetchControlListESRequest() *FetchControlListESRequest {
	this := FetchControlListESRequest{}
	return &this
}

// NewFetchControlListESRequestWithDefaults instantiates a new FetchControlListESRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFetchControlListESRequestWithDefaults() *FetchControlListESRequest {
	this := FetchControlListESRequest{}
	return &this
}

// GetSearchcriteria returns the Searchcriteria field value if set, zero value otherwise.
func (o *FetchControlListESRequest) GetSearchcriteria() map[string]interface{} {
	if o == nil || IsNil(o.Searchcriteria) {
		var ret map[string]interface{}
		return ret
	}
	return o.Searchcriteria
}

// GetSearchcriteriaOk returns a tuple with the Searchcriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FetchControlListESRequest) GetSearchcriteriaOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Searchcriteria) {
		return map[string]interface{}{}, false
	}
	return o.Searchcriteria, true
}

// HasSearchcriteria returns a boolean if a field has been set.
func (o *FetchControlListESRequest) HasSearchcriteria() bool {
	if o != nil && !IsNil(o.Searchcriteria) {
		return true
	}

	return false
}

// SetSearchcriteria gets a reference to the given map[string]interface{} and assigns it to the Searchcriteria field.
func (o *FetchControlListESRequest) SetSearchcriteria(v map[string]interface{}) {
	o.Searchcriteria = v
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *FetchControlListESRequest) GetMax() string {
	if o == nil || IsNil(o.Max) {
		var ret string
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FetchControlListESRequest) GetMaxOk() (*string, bool) {
	if o == nil || IsNil(o.Max) {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *FetchControlListESRequest) HasMax() bool {
	if o != nil && !IsNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given string and assigns it to the Max field.
func (o *FetchControlListESRequest) SetMax(v string) {
	o.Max = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *FetchControlListESRequest) GetOffset() string {
	if o == nil || IsNil(o.Offset) {
		var ret string
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FetchControlListESRequest) GetOffsetOk() (*string, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *FetchControlListESRequest) HasOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given string and assigns it to the Offset field.
func (o *FetchControlListESRequest) SetOffset(v string) {
	o.Offset = &v
}

// GetLoggedinuser returns the Loggedinuser field value if set, zero value otherwise.
func (o *FetchControlListESRequest) GetLoggedinuser() string {
	if o == nil || IsNil(o.Loggedinuser) {
		var ret string
		return ret
	}
	return *o.Loggedinuser
}

// GetLoggedinuserOk returns a tuple with the Loggedinuser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FetchControlListESRequest) GetLoggedinuserOk() (*string, bool) {
	if o == nil || IsNil(o.Loggedinuser) {
		return nil, false
	}
	return o.Loggedinuser, true
}

// HasLoggedinuser returns a boolean if a field has been set.
func (o *FetchControlListESRequest) HasLoggedinuser() bool {
	if o != nil && !IsNil(o.Loggedinuser) {
		return true
	}

	return false
}

// SetLoggedinuser gets a reference to the given string and assigns it to the Loggedinuser field.
func (o *FetchControlListESRequest) SetLoggedinuser(v string) {
	o.Loggedinuser = &v
}

func (o FetchControlListESRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FetchControlListESRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Searchcriteria) {
		toSerialize["searchcriteria"] = o.Searchcriteria
	}
	if !IsNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	if !IsNil(o.Loggedinuser) {
		toSerialize["loggedinuser"] = o.Loggedinuser
	}
	return toSerialize, nil
}

type NullableFetchControlListESRequest struct {
	value *FetchControlListESRequest
	isSet bool
}

func (v NullableFetchControlListESRequest) Get() *FetchControlListESRequest {
	return v.value
}

func (v *NullableFetchControlListESRequest) Set(val *FetchControlListESRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFetchControlListESRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFetchControlListESRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFetchControlListESRequest(val *FetchControlListESRequest) *NullableFetchControlListESRequest {
	return &NullableFetchControlListESRequest{value: val, isSet: true}
}

func (v NullableFetchControlListESRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFetchControlListESRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


