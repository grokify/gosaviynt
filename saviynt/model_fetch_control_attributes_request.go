/*
Saviynt Enterprise Identity Cloud (EIC) API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package saviynt

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FetchControlAttributesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FetchControlAttributesRequest{}

// FetchControlAttributesRequest struct for FetchControlAttributesRequest
type FetchControlAttributesRequest struct {
	Analyticstype string `json:"analyticstype"`
	Analyticsname *string `json:"analyticsname,omitempty"`
	Id *string `json:"id,omitempty"`
	Offset *string `json:"offset,omitempty"`
	Max *string `json:"max,omitempty"`
}

type _FetchControlAttributesRequest FetchControlAttributesRequest

// NewFetchControlAttributesRequest instantiates a new FetchControlAttributesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFetchControlAttributesRequest(analyticstype string) *FetchControlAttributesRequest {
	this := FetchControlAttributesRequest{}
	this.Analyticstype = analyticstype
	return &this
}

// NewFetchControlAttributesRequestWithDefaults instantiates a new FetchControlAttributesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFetchControlAttributesRequestWithDefaults() *FetchControlAttributesRequest {
	this := FetchControlAttributesRequest{}
	return &this
}

// GetAnalyticstype returns the Analyticstype field value
func (o *FetchControlAttributesRequest) GetAnalyticstype() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Analyticstype
}

// GetAnalyticstypeOk returns a tuple with the Analyticstype field value
// and a boolean to check if the value has been set.
func (o *FetchControlAttributesRequest) GetAnalyticstypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Analyticstype, true
}

// SetAnalyticstype sets field value
func (o *FetchControlAttributesRequest) SetAnalyticstype(v string) {
	o.Analyticstype = v
}

// GetAnalyticsname returns the Analyticsname field value if set, zero value otherwise.
func (o *FetchControlAttributesRequest) GetAnalyticsname() string {
	if o == nil || IsNil(o.Analyticsname) {
		var ret string
		return ret
	}
	return *o.Analyticsname
}

// GetAnalyticsnameOk returns a tuple with the Analyticsname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FetchControlAttributesRequest) GetAnalyticsnameOk() (*string, bool) {
	if o == nil || IsNil(o.Analyticsname) {
		return nil, false
	}
	return o.Analyticsname, true
}

// HasAnalyticsname returns a boolean if a field has been set.
func (o *FetchControlAttributesRequest) HasAnalyticsname() bool {
	if o != nil && !IsNil(o.Analyticsname) {
		return true
	}

	return false
}

// SetAnalyticsname gets a reference to the given string and assigns it to the Analyticsname field.
func (o *FetchControlAttributesRequest) SetAnalyticsname(v string) {
	o.Analyticsname = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FetchControlAttributesRequest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FetchControlAttributesRequest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FetchControlAttributesRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FetchControlAttributesRequest) SetId(v string) {
	o.Id = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *FetchControlAttributesRequest) GetOffset() string {
	if o == nil || IsNil(o.Offset) {
		var ret string
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FetchControlAttributesRequest) GetOffsetOk() (*string, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *FetchControlAttributesRequest) HasOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given string and assigns it to the Offset field.
func (o *FetchControlAttributesRequest) SetOffset(v string) {
	o.Offset = &v
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *FetchControlAttributesRequest) GetMax() string {
	if o == nil || IsNil(o.Max) {
		var ret string
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FetchControlAttributesRequest) GetMaxOk() (*string, bool) {
	if o == nil || IsNil(o.Max) {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *FetchControlAttributesRequest) HasMax() bool {
	if o != nil && !IsNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given string and assigns it to the Max field.
func (o *FetchControlAttributesRequest) SetMax(v string) {
	o.Max = &v
}

func (o FetchControlAttributesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FetchControlAttributesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["analyticstype"] = o.Analyticstype
	if !IsNil(o.Analyticsname) {
		toSerialize["analyticsname"] = o.Analyticsname
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	if !IsNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	return toSerialize, nil
}

func (o *FetchControlAttributesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"analyticstype",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFetchControlAttributesRequest := _FetchControlAttributesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFetchControlAttributesRequest)

	if err != nil {
		return err
	}

	*o = FetchControlAttributesRequest(varFetchControlAttributesRequest)

	return err
}

type NullableFetchControlAttributesRequest struct {
	value *FetchControlAttributesRequest
	isSet bool
}

func (v NullableFetchControlAttributesRequest) Get() *FetchControlAttributesRequest {
	return v.value
}

func (v *NullableFetchControlAttributesRequest) Set(val *FetchControlAttributesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFetchControlAttributesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFetchControlAttributesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFetchControlAttributesRequest(val *FetchControlAttributesRequest) *NullableFetchControlAttributesRequest {
	return &NullableFetchControlAttributesRequest{value: val, isSet: true}
}

func (v NullableFetchControlAttributesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFetchControlAttributesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


